printlevel = 3;
LIB"gfanlib.so";
LIB "../lib/new_autmds.lib";

intmat Q[2][5] = 
  2,4,1,3,1,
  1,1,1,0,0;

list TOR = 2; // means CL(X) = ZZ + ZZ/TOR[1]*ZZ + ...

ring R = 0,T(1..5),dp;

// attach Q to R:
setBaseMultigrading(Q); 

ideal I = T(1)*T(2) + T(3)^6 + T(4)^2;

def S = autCox(I, TOR);
setring S;

ideal J = Jexported;
J;

"__";
stabExported;

"__shrink";
def Small = shrink(J);
setring Small;
ideal J = Ishrink;

"_____dim, comps";
dim(std(J));

def U = absPrimdecGTZ(J);
setring U;  
absolute_primes; 

quit;





def S = aut(I, TOR);
setring S;
list L = RES;


S;
int n = ncols(Q);

printAut(L, n);

// compute dimension and components:
printAutInfo(L, n, 1); // one by one
printAutInfo(L, n, 0); // slow



/////////////////////////
